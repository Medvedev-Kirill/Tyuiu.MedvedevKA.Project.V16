@page "/report"
@inject ISalesDataService SalesDataService
@inject NavigationManager NavigationManager

<h3>Отчет о продажах</h3>

<div>
    <label for="startDate">Дата начала:</label>
    <input type="date" id="startDate" @bind="StartDate" />
    <label for="endDate">Дата окончания:</label>
    <input type="date" id="endDate" @bind="EndDate" />
    <button @onclick="GenerateReport">Сгенерировать отчет Не РАБОТАЕТ!</button>
</div>

@if (salesReport != null && salesReport.Any())
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>ID продажи</th>
                <th>Товар</th>
                <th>Сотрудник</th>
                <th>Дата продажи</th>
                <th>Количество</th>
                <th>Цена</th>
                <th>Общая стоимость</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sale in salesReport)
            {
                <tr>
                    <td>@sale.SaleId</td>
                    <td>@(sale.Product?.NameProduct ?? "Товар не найден")</td>
                    <td>@(sale.Employee != null ? $"{sale.Employee.FirstName} {sale.Employee.LastName}" : "Сотрудник не найден")</td>
                    <td>@sale.Date.ToShortDateString()</td>
                    <td>@sale.Quantity</td>
                    <td>@sale.Price.ToString("C")</td>
                    <td>@((sale.Price * sale.Quantity).ToString("C"))</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="6"><b>Итого:</b></td>
                <td><b>@TotalSales.ToString("C")</b></td>
            </tr>
        </tfoot>
    </table>
}
else if (errorMessage != null)
{
    <p style="color: red;">@errorMessage</p>
}
else if (salesReport != null && !salesReport.Any())
{
    <p>Нет данных за выбранный период.</p>
}

@code {
    private DateTime StartDate { get; set; } = DateTime.Now.AddMonths(-1);
    private DateTime EndDate { get; set; } = DateTime.Now;
    private IEnumerable<Sale>? salesReport;
    private string? errorMessage;
    private decimal TotalSales = 0;

    protected override void OnInitialized()
    {
        GenerateReport();
    }

    private async Task GenerateReport()
    {
        try
        {
            salesReport = await SalesDataService.GetSalesAsync(StartDate, EndDate);
            if (salesReport == null || !salesReport.Any())
            {
                errorMessage = "Нет данных для отображения.";
                TotalSales = 0;
                StateHasChanged();
                return;
            }

            TotalSales = salesReport.Sum(s => s.Price * s.Quantity);
            errorMessage = null;

            StateHasChanged();

        }
        catch (Exception ex)
        {
            errorMessage = $"Ошибка: {ex.Message}";
            salesReport = null;
            TotalSales = 0;
            StateHasChanged();
        }
    }
}
